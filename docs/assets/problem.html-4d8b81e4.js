import{_ as e,r as o,o as i,c,b as n,d as t,e as s,w as l,a as p}from"./app-98750c99.js";const d={},u=n("h1",{id:"常见问题",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#常见问题","aria-hidden":"true"},"#"),t(" 常见问题")],-1),r=n("li",null,[n("p",null,"大屏轮播如何实现？"),n("ul",null,[n("li",null,[t("软件未提供轮播管理功能，但可采用跳转组件实现，具体使用方式如下： "),n("ol",null,[n("li",null,"拖放控件分组中的跳转组件到画布，若想要不显示可在右侧配置栏-->基础 设置隐藏。"),n("li",null,"设置交互方式，选中触发方式，选择触发选项“下一页”，交互方式选择下钻，选择下一次轮播的大屏。"),n("li",null,"属性栏开启自动触发，设置触发延时（间隔多久轮播下一页大屏），选择触发类型为下一页（交互方式中选择的触发选项）。")])]),n("li",null,"轮播的下一张大屏重复以上步骤即可完成多屏轮播，保存预览时生效。")])],-1),k=n("p",null,"如何扩充组件？",-1),v=n("p",null,"使用导入时，导入失败，提示版本不一致，如何强制导入？",-1),g=n("li",null,[n("p",null,"如何接入达梦、人大金仓、TDSQL等国产数据库？"),n("ul",null,[n("li",null,"目前版本已经内置市面常用的4种数据库：SQL Server、Oracle、Mysql、Postgre数据库，可在数据源管理通过对应数据库版本的jdbc连接串直接创建数据库连接。理论上只要数据库厂商提供jdbc连接驱动包就能接入，需要修改后端源码实现，方式如下：")])],-1),m=p(`<div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>1.在后端工程中的pom.xml中引入jdbc驱动包（以达梦为例）:

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.dameng<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>DmJdbcDriver18<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>你的版本号<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

2.打包后端并重启
3.进入数据源管理添加数据源
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>新建数据源时数据源类型下拉框只作为展示或搜索用，可直接在前端代码中增加一个下拉选项，此字段不参与后端实际调用数据库。</p><ul><li><p>为何某些账号看不见一些大屏或数据源？</p><ul><li>大屏管理、模板管理、数据源管理、API数据集管理、SQL数据集管理都做了数据权限，具体用户的数据权限可在“系统管理---&gt;资源权限”菜单进行设置。</li></ul></li><li><p>API接口需要获取token前置认证如何处理？</p><ul><li>针对第三方需要认证的接口需要使用API数据集的方案</li><li>方案一：将大屏项目与认证系统部署在同一主域名下，API数据集通过<a href="./datasource#%E5%8A%A8%E6%80%81%E5%8F%82%E6%95%B0%E4%BD%BF%E7%94%A8%E7%A4%BA%E4%BE%8B">表达式</a>从cookie可获取域名下的token参数</li><li>方案二：新建一个认证的API数据集按照接口方的认证方式在请求参数中填写对应的认证信息，在转换脚本栏填写脚本将接口请求之后的token写在cookie中，然后别的api接口可以通过写<a href="./datasource#%E5%8A%A8%E6%80%81%E5%8F%82%E6%95%B0%E4%BD%BF%E7%94%A8%E7%A4%BA%E4%BE%8B">表达式</a>从cookie获取token。接下来可以在大屏中拖一个文本组件设置默认不显示，配置上认证的数据集，按照认证的过期规则设置轮询时间。但此时无法保证大屏中认证的这个数据集优先调用，可以新建一个loading大屏页，loading页拖动一个跳转组件，将认证的数据集绑定在跳转组件上，跳转组件可配置数据接口响应完成后跳转，给跳转组件配置下钻的交互方式，认证完成后可自动跳转到指定的大屏。</li></ul></li><li><p>程序相关报错：</p></li></ul><table><thead><tr><th>报错场景/信息</th><th>原因分析</th><th>处理方案</th></tr></thead><tbody><tr><td>连接sql server数据源时报错：Theserver selected protocol version TLS10 is not accepted by client preferences TLS12</td><td>JDK17+不支持TLSV1.0协议</td><td>降低jdk版本或者删除运行环境中jre/lib/security/java.security文件</td></tr><tr><td>验证码接口报错</td><td>服务器环境缺少相关字体</td><td>yum install dejavu-sans-fonts fontconfig -y</td></tr><tr><td>验证码初次请求时耗时过长(&gt;20s)</td><td>服务器计算随机数时资源不足</td><td>删除运行环境中jre/lib/security/java.security文件</td></tr><tr><td>保存数据时报错：JSON parse error:Invalid UTF-8 start byte 0xb1</td><td></td><td>启动命令加入jvm参数 java -Dfile.encoding=UTF-8 -jar xxx.jar</td></tr></tbody></table>`,4);function b(_,h){const a=o("RouterLink");return i(),c("div",null,[u,n("ul",null,[r,n("li",null,[k,n("ul",null,[n("li",null,[t("扩充组件目前需要修改前端源码，详见"),s(a,{to:"/custom/"},{default:l(()=>[t("自定义组件")]),_:1})])])]),n("li",null,[v,n("ul",null,[n("li",null,[t("程序的后期更新会尽可能的兼容原有组件配置，但无法做到100%兼容，后续升级可能导致由于之前版本导出的数据结构还是较老版本而无法正常的渲染组件，所以做了版本校验，如果需要跳过版本校验，可用文本编辑器打开.cd后缀的文件，修改version字段为当前使用的版本号（可在登陆页底部查看当前软件版本号）。（"),s(a,{to:"/logs/"},{default:l(()=>[t("版本更新日志")]),_:1}),t("）")])])]),g]),m])}const E=e(d,[["render",b],["__file","problem.html.vue"]]);export{E as default};
